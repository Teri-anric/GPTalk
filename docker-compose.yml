services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: gptalk-app
    restart: always
    command: ["python", "-m", "app.bot"]
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - gptalk_network

  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: gptalk-worker
    restart: always
    command: ["python", "-m", "app.worker"]
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - gptalk_network

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_PORT=${DATABASE_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    networks:
      - gptalk_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}", "-d", "${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  gptalk_network:
    driver: bridge 